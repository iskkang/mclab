<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <title>MTL Dashboard</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/footer.css" />
    <script src="/js/portInfo.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js"></script>
    <link
      href="https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css"
    />
    <link rel="stylesheet" href="/feather/feather.css" />
    <link rel="stylesheet" href="/mdi/css/materialdesignicons.min.css" />
    <link rel="stylesheet" href="/ti-icons/css/themify-icons.css" />
    <link rel="stylesheet" src="/typicons/typicons.css" />
    <link
      rel="stylesheet"
      href="/simple-line-icons/css/simple-line-icons.css"
    />
    <link rel="stylesheet" href="/css/vendor.bundle.base.css" />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Include DataTables -->
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link
      rel="stylesheet"
      href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css"
    />

    <!-- endinject -->
    <!-- Plugin css for this page -->
    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <link rel="stylesheet" href="/css/style.css" />
    <!-- endinject -->
    <link rel="shortcut icon" href="/images/favicon.png" />
    <script src="https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js"></script>
    <link
      href="https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css"
      rel="stylesheet"
    />
    <script src="https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/leaflet.markercluster.js"></script>
    <link
      href="https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.css"
      rel="stylesheet"
    />
    <link
      href="https://api.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v1.0.0/MarkerCluster.Default.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.2.1/dist/chart.umd.min.js"></script>
  </head>

  <body>
    <div class="container-scroller">
      <%- include('../partials/navbar') %>
      <div class="container-fluid page-body-wrapper">
        <%- include('../partials/sidebar') %>
        <!-- partial -->
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="row">
              <div id="mapContainer" class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <div class="card-title">
                      Ports Map <code>to move port details</code>
                    </div>
                    <div id="map" style="width: 100%; height: 380px"></div>
                  </div>
                </div>
              </div>
              <!------------------------------------------------------------------------------------------------------------------------------>

              <div class="col-sm-6 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">컨테이너선 정박 數</h4>
                    <canvas id="portChart"></canvas>
                  </div>
                </div>
              </div>
              <div class="col-sm-6 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">선박別 출도착</h4>
                    <canvas id="containerChart"></canvas>
                  </div>
                </div>
              </div>
            </div>
        

          <!------------------------------------------------------------------------------------------------------------------------------>
          <!------------------------------------------------------------------------------------------------------------------------------>
          <!----------------스케줄 테이블------------------------------------------------------------------------------------------->
          <!------------------------------------------------------------------------------------------------------------------------------>
          <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
              <div class="card-body">
                <h4 class="card-title">스케줄 정보</h4>
                <p class="card-description"></p>
                <div class="table-responsive">
                  <table
                    id="scheduleTable"
                    class="table table-striped"
                    style="width: 100%"
                  >
                    <thead>
                      <tr>
                        <th>Vessel</th>
                        <th>ATD</th>
                        <th>ETA</th>
                        <th>Delay</th>
                        <th>Next POD</th>
                        <th>TEU</th>
                        <th>Liner</th>
                        <th>Status</th>
                        <th>Update</th>
                      </tr>
                    </thead>
                    <tbody></tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
          <%- include('../partials/footer') %>
          <!-- partial -->
    <!-- container-scroller -->
    <!-- plugins:js -->
    <!-- plugins:js -->
    <script src="/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="/chart.js/Chart.min.js"></script>
    <script src="/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="/jss/off-canvas.js"></script>
    <script src="/jss/hoverable-collapse.js"></script>
    <script src="/jss/template.js"></script>
    <script src="/jss/settings.js"></script>
    <script src="/jss/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page-->
    <script src="/jss/chart.js"></script>
    <!-- End custom js for this page-->

    <script>
      var startLat = 44;
      var startLon = 12;
      var startZoom = 1.4;

      mapboxgl.accessToken =
        "pk.eyJ1IjoiY2FycmllLXhpYSIsImEiOiJja3Z0NDVtMzczZWpnMm9tdG92eHgxZXo5In0.DQ9J_C1Np1kl0Slf4EVoMA";

      class ResetControl {
        onAdd(map) {
          this.map = map;
          this.container = document.createElement("div");
          this.container.className = "mapboxgl-ctrl mapboxgl-ctrl-group";
          this.button = document.createElement("button");
          this.button.className = "mapboxgl-ctrl-icon mapboxgl-ctrl-reset";
          this.button.textContent = "R";
          this.container.appendChild(this.button);
          this.button.addEventListener("click", () => this.reset());
          return this.container;
        }

        onRemove() {
          this.container.parentNode.removeChild(this.container);
          this.map = undefined;
        }

        reset() {
          this.map.flyTo({
            center: [startLon, startLat],
            zoom: startZoom,
          });
        }
      }

      var map = new mapboxgl.Map({
        container: "map",
        style: "mapbox://styles/mapbox/light-v10",
        center: [44, 12],
        zoom: 1.3,
      });

      const resetControl = new ResetControl();
      map.addControl(resetControl, "top-right");

      // Assuming you have a vessel.csv file in the same directory
      fetch("/api/vessel")
        .then((response) => response.json())
        .then((vesselsData) => {
          // Create a GeoJSON FeatureCollection from your vessel data
          vesselsData.forEach((vessel) => {
            const lat = parseFloat(vessel.coord.split(",")[0]);
            const lon = parseFloat(vessel.coord.split(",")[1]);

            // Create a marker for each port
            const el = document.createElement("div");
            el.className = "marker";
            el.style.backgroundImage = "url(icons/marker/nav-arrow-2.png)";
            el.style.transform = `rotate(vessel.heading);`;

            // Add event listeners for marker enter and leave events
            el.addEventListener(
              "mouseenter",
              () =>
                (el.style.backgroundImage = "url(icons/marker/nav-arrow-2.png)")
            );
            el.addEventListener(
              "mouseleave",
              () =>
                (el.style.backgroundImage = "url(icons/marker/nav-arrow-2.png)")
            );

            var marker = new mapboxgl.Marker(el)
              .setLngLat([lon, lat])
              .addTo(map);

            var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(
              `<h5>${vessel.id}</h5><p>${vessel.name}</p>`
            );
            marker.setPopup(popup);

            // Show the popup on mouseenter
            el.addEventListener("mouseenter", () => marker.togglePopup());

            // Hide the popup on mouseleave
            el.addEventListener("mouseleave", () => marker.togglePopup());

            // Fly to the clicked port and load new data
            el.addEventListener("click", () => {
              map.flyTo({ center: [lon, lat], zoom: 8 });

              let portInfoUrl = `https://www.econdb.com/maritime/ports/async/${port.locode}`;
              populatePortInfo(portInfoUrl);
              let portInVesselUrl = `https://www.econdb.com/widgets/ships-in-port/data/?freq=week&locode=${port.locode}`;
              let arriveDepartUrl = `https://www.econdb.com/widgets/port-time-series/data/?type=arrivals&unit=number&freq=week&locode=${port.locode}`;
              let containerTradeUrl = `https://www.econdb.com/widgets/sea-trade-by-week/data/?freq=week&locode=${port.locode}`;

              Promise.all([
                fetch(portInfoUrl).then((res) => res.json()),
                fetch(portInVesselUrl).then((res) => res.json()),
                fetch(arriveDepartUrl).then((res) => res.json()),
                fetch(containerTradeUrl).then((res) => res.json()),
              ])
                .then(
                  ([portInfo, portInVessel, arriveDepart, containerTrade]) => {
                    // You now have all the data from the four URLs
                    // You can use them to add additional markers or data to your map
                    // For example, let's just log the data for now:
                    console.log(
                      portInfo,
                      portInVessel,
                      arriveDepart,
                      containerTrade
                    );
                  }
                )
                .catch((err) => {
                  // handle error here
                  console.error("An error occurred while fetching data: ", err);
                });

              fetchportInVesselData(portInVesselUrl);
              fetchContainerTradeData(arriveDepartUrl);
              fetchContainerTradeData(containerTradeUrl);

              fetch(port.vessel_map)
                .then((response) => response.json())
                .then((vesselData) => {
                  // Add new markers for the vessel data
                  // Assuming vesselData is in the same format as portsData
                  vesselData.forEach((vessel) => {
                    const vesselLat = parseFloat(vessel.lat);
                    const vesselLon = parseFloat(vessel.lon);
                    // Create a marker for each vessel
                    const vesselEl = document.createElement("div");
                    vesselEl.className = "marker";
                    vesselEl.style.backgroundImage = "url(icons/nav-arrow.png)";

                    // Add event listeners for marker enter and leave events
                    vesselEl.addEventListener(
                      "mouseenter",
                      () =>
                        (vesselEl.style.backgroundImage =
                          "url(icons/nav-arrow-hovered.png)")
                    );
                    vesselEl.addEventListener(
                      "mouseleave",
                      () =>
                        (vesselEl.style.backgroundImage =
                          "url(icons/nav-arrow.png)")
                    );

                    // Create a marker using the HTML element and add it to the map
                    var vesselMarker = new mapboxgl.Marker(vesselEl)
                      .setLngLat([vesselLon, vesselLat])
                      .addTo(map);

                    // Create a popup for the marker and add it to the marker
                    var vesselPopup = new mapboxgl.Popup({
                      offset: 25,
                    }).setHTML(`<h3>${vessel.name}</h3><p>${vessel.type}</p>`);
                    vesselMarker.setPopup(vesselPopup);

                    // Show the popup on mouseenter
                    vesselEl.addEventListener("mouseenter", () =>
                      vesselMarker.togglePopup()
                    );

                    // Hide the popup on mouseleave
                    vesselEl.addEventListener("mouseleave", () =>
                      vesselMarker.togglePopup()
                    );
                  });
                })
                .catch((error) => console.error("Error:", error));
            });
          });
        })
        .catch((error) => console.error("Error:", error));

      map.addControl(new mapboxgl.NavigationControl());
      map.addControl(new mapboxgl.ScaleControl());
    </script>
    <script>
      // Flag to keep track of the container's current size
      let isSmall = false;

      // Listen for a click event on the button
      $("#resizeButton").click(function () {
        if (isSmall) {
          // If the container is currently small, make it large
          $("#mapContainer").removeClass("col-lg-6").addClass("col-lg-12");
          isSmall = false;
        } else {
          // If the container is currently large, make it small
          $("#mapContainer").removeClass("col-lg-12").addClass("col-lg-6");
          isSmall = true;
        }
      });
    </script>

    <script src="/js/arrival.js"></script>
    <script src="/js/containerTrade.js"></script>
    <script src="/js/portInVessel.js"></script>
    <script src="/js/bundlebase.js"></script>
  </body>
</html>
