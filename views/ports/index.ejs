<!DOCTYPE html>
<html>
  <head>
    <title>Item List</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/css/style.css" />
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.bootstrap5.min.css"
    />
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
  </head>
  <body>
    <div class="container-scroller">
      <%- include('../partials/navbar') %>
      <div class="container-fluid page-body-wrapper">
        <%- include('../partials/sidebar') %>
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="row">
              <div class="col-lg-8 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Port Map</h4>
                    <div id="map" style="width: 100%; height: 400px"></div>
                  </div>
                </div>
              </div>
              <div class="col-lg-4 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Real-Time Data</h4>
                    <p class="card-subtitle">
                      [Port의 Status를 클릭하면 나옵니다!]
                    </p>
                    <div class="myChartDiv">
                      <div id="mypieChart">
                        <canvas id="myPieChart"></canvas>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-lg-8 d-flex flex-column">
                  <div class="row flex-grow">
                    <div
                      class="col-12 col-lg-4 col-lg-12 grid-margin stretch-card"
                    >
                      <div class="card card-rounded">
                        <div class="card-body">
                          <div
                            class="d-sm-flex justify-content-between align-items-start"
                          >
                            <div>
                              <h4 class="card-title card-title-dash">
                                Performance Line Chart
                              </h4>
                              <h5 class="card-subtitle card-subtitle-dash">
                                Lorem Ipsum is simply dummy text of the printing
                              </h5>
                            </div>
                            <div id="performance-line-legend">
                              <div class="weeklyChart">
                                <ul>
                                  <li>
                                    <span
                                      style="background-color: #1f3bb3"
                                    ></span
                                    >This week
                                  </li>
                                  <li>
                                    <span
                                      style="background-color: #52cdff"
                                    ></span
                                    >Last week
                                  </li>
                                </ul>
                              </div>
                            </div>
                          </div>
                          <div class="chartjs-wrapper mt-5">
                            <div class="chartjs-size-monitor">
                              <div class="chartjs-size-monitor-expand">
                                <div class=""></div>
                              </div>
                              <div class="chartjs-size-monitor-shrink">
                                <div class=""></div>
                              </div>
                            </div>
                            <canvas
                              id="weeklyChart"
                              style="
                                display: block;
                                height: 300px;
                                width: 800px;
                              "
                              width="705"
                              height="225"
                              class="chartjs-render-monitor"
                            ></canvas>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col-lg-4 d-flex flex-column">
                  <div class="row flex-grow">
                    <div class="col-md-6 col-lg-12 grid-margin stretch-card">
                      <div class="card bg-primary card-rounded">
                        <div class="card-body pb-0">
                          <h4
                            class="card-title card-title-dash text-white mb-4"
                          >
                            Status Summary
                          </h4>
                          <div class="row">
                            <div class="col-sm-4">
                              <p class="status-summary-ight-white mb-1">
                                Closed Value
                              </p>
                              <h2 class="text-info">357</h2>
                            </div>
                            <div class="col-sm-8">
                              <div class="status-summary-chart-wrapper pb-4">
                                <div class="chartjs-size-monitor">
                                  <div class="chartjs-size-monitor-expand">
                                    <div class=""></div>
                                  </div>
                                  <div class="chartjs-size-monitor-shrink">
                                    <div class=""></div>
                                  </div>
                                </div>
                                <canvas
                                  id="status-summary"
                                  width="181"
                                  height="99"
                                  style="
                                    display: block;
                                    height: 66px;
                                    width: 121px;
                                  "
                                  class="chartjs-render-monitor"
                                ></canvas>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-6 col-lg-12 grid-margin stretch-card">
                      <div class="card card-rounded">
                        <div class="card-body">
                          <div class="row">
                            <div class="col-sm-6">
                              <div
                                class="d-flex justify-content-between align-items-center mb-2 mb-sm-0"
                              >
                                <div class="circle-progress-width">
                                  <div
                                    id="totalVisitors"
                                    class="progressbar-js-circle pr-2"
                                  >
                                    <svg
                                      viewBox="0 0 100 100"
                                      style="display: block; width: 100%"
                                    >
                                      <path
                                        d="M 50,50 m 0,-42.5 a 42.5,42.5 0 1 1 0,85 a 42.5,42.5 0 1 1 0,-85"
                                        stroke="#eee"
                                        stroke-width="15"
                                        fill-opacity="0"
                                      ></path>
                                      <path
                                        d="M 50,50 m 0,-42.5 a 42.5,42.5 0 1 1 0,85 a 42.5,42.5 0 1 1 0,-85"
                                        stroke="rgb(99,137,233)"
                                        stroke-width="15"
                                        fill-opacity="0"
                                        style="
                                          stroke-dasharray: 267.132, 267.132;
                                          stroke-dashoffset: 96.1674;
                                        "
                                      ></path>
                                    </svg>
                                    <div
                                      class="progressbar-text"
                                      style="
                                        position: absolute;
                                        left: 50%;
                                        top: 50%;
                                        padding: 0px;
                                        margin: 0px;
                                        transform: translate(-50%, -50%);
                                        color: rgb(255, 255, 255);
                                        font-size: 0rem;
                                      "
                                    >
                                      64
                                    </div>
                                  </div>
                                </div>
                                <div>
                                  <p class="text-small mb-2">Total Visitors</p>
                                  <h4 class="mb-0 fw-bold">26.80%</h4>
                                </div>
                              </div>
                            </div>
                            <div class="col-sm-6">
                              <div
                                class="d-flex justify-content-between align-items-center"
                              >
                                <div class="circle-progress-width">
                                  <div
                                    id="visitperday"
                                    class="progressbar-js-circle pr-2"
                                  >
                                    <svg
                                      viewBox="0 0 100 100"
                                      style="display: block; width: 100%"
                                    >
                                      <path
                                        d="M 50,50 m 0,-42.5 a 42.5,42.5 0 1 1 0,85 a 42.5,42.5 0 1 1 0,-85"
                                        stroke="#eee"
                                        stroke-width="15"
                                        fill-opacity="0"
                                      ></path>
                                      <path
                                        d="M 50,50 m 0,-42.5 a 42.5,42.5 0 1 1 0,85 a 42.5,42.5 0 1 1 0,-85"
                                        stroke="rgb(60,168,179)"
                                        stroke-width="15"
                                        fill-opacity="0"
                                        style="
                                          stroke-dasharray: 267.132, 267.132;
                                          stroke-dashoffset: 176.307;
                                        "
                                      ></path>
                                    </svg>
                                    <div
                                      class="progressbar-text"
                                      style="
                                        position: absolute;
                                        left: 50%;
                                        top: 50%;
                                        padding: 0px;
                                        margin: 0px;
                                        transform: translate(-50%, -50%);
                                        color: rgb(255, 255, 255);
                                        font-size: 0rem;
                                      "
                                    >
                                      34
                                    </div>
                                  </div>
                                </div>
                                <div>
                                  <p class="text-small mb-2">Visits per day</p>
                                  <h4 class="mb-0 fw-bold">9065</h4>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <script>
          function generatePopupHtml(station) {
            return `
            <div id="coverageMapPopup" class="row" style="display: block;">
              <h1><span class="badge" id="coverageMapStationID">${station.id}</span>
                <span id="coverageMapStationName">${station.name}</span></h1>
              <button class="button" id="coverageMapStationButton" onclick="loadStationData(${station.id}); loadShipData(${station.id})">Status</button>
              <div id="coverageMapPopupClose">x</div>
            </div>
          `;
          }

          async function loadStationData(stationId) {
            try {
              const realtimeData = await fetch(
                `/api/stations/${stationId}/realtime`
              ).then((response) => response.json());
              const weeklyStatsData = await fetch(
                `/api/stations/${stationId}/weekly-statistics`
              ).then((response) => response.json());
              const monthlyStatsData = await fetch(
                `/api/stations/${stationId}/monthly-statistics`
              ).then((response) => response.json());
              const yearlyStatsData = await fetch(
                `/api/stations/${stationId}/yearly-statistics`
              ).then((response) => response.json());

              createPieChart(realtimeData.shipType);
              createLine1Chart(weeklyStatsData); // Assuming you have a function that creates a line chart.
              createLine2Chart(monthlyStatsData);
            } catch (error) {
              console.error("Error:", error);
            }
          }
          async function loadShipData(stationId) {
            try {
              const data = await fetch(`/api/coords/${stationId}`).then(
                (response) => response.json()
              );
              const shipData = data.shipData;
              if (shipData.positions && shipData.positions.length > 0) {
                // Iterate over each position
                shipData.positions.forEach((position) => {
                  const lat = position.lat;
                  const lon = position.lon;
                  let iconUrl = "https://www.aishub.net/images/map/@1/number/";
                  // Change icon URL based on position parameters
                  if (position.icon === 2 && position.sog > 0) {
                    iconUrl += "2s.png";
                  } else if (position.icon === 1 && position.sog === 0) {
                    iconUrl += "1s.png";
                  } else if (position.icon === 2 && position.sog === 0) {
                    iconUrl += "2s.png";
                  } else if (position.icon === 1 && position.sog > 0) {
                    iconUrl += "1s.png";
                  }
                  // Create custom Leaflet icon
                  var customIcon = L.icon({
                    iconUrl: iconUrl,
                    iconSize: [22, 22], // size of the icon
                    iconAnchor: [0, 0], // point of the icon which will correspond to marker's location
                    popupAnchor: [0, -41], // point from which the popup should open relative to the iconAnchor
                  });

                  // Add marker to map at the given position
                  var marker = L.marker([lat, lon], { icon: customIcon }).addTo(
                    map
                  );
                });
                // Fly to the first position with zoom level 12
                const firstPosition = shipData.positions[0];
                map.flyTo([firstPosition.lat, firstPosition.lon], 12);
              }
              console.log(shipData);
            } catch (error) {
              console.error("Error:", error);
            }
          }
          var map = L.map("map").setView([46, 13.5], 2);
          L.tileLayer(
            "https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png",
            {
              maxZoom: 19,
              attribution:
                '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            }
          ).addTo(map);
          // Icons
          var icon0 = L.icon({
            iconUrl: "https://www.aishub.net/images/map/@2/type/64s.png",
            iconSize: [17, 17],
          });
          var icon1 = L.icon({
            iconUrl: "https://www.aishub.net/images/map/@2/type/4s.png",
            iconSize: [17, 17],
          });
          // Fetch data

          // Now we can use the data variable in our JavaScript code
          document.getElementById("data").innerText = JSON.stringify(
            data,
            null,
            2
          );

          data.stations.forEach((stations) => {
            var icon = stations.status === 0 ? icon0 : icon1;
            var marker = L.marker([stations.lat, stations.lon], {
              icon: icon,
            }).addTo(map);

            var popupHtml = generatePopupHtml(stations);
            marker.bindPopup(popupHtml);

            marker.on("click", async () => {
              try {
                const stationData = await loadStationData(stations.id);
                const shipData = await loadShipData(stations.id);

                // Do something with stationData and shipData here...
              } catch (error) {
                console.error("Error:", error);
              }
            });
          });
        </script>

        <!-------------------------------------------------------------------------------------------------------------------------------->
        <!-- pie chart -->
        <!-------------------------------------------------------------------------------------------------------------------------------->

        <script>
          // URLs to fetch data from
          function createPieChart(shipTypeData) {
            // Create pie chart after fetching data
            let ctx = document.getElementById("myPieChart").getContext("2d");
            let myPieChart = new Chart(ctx, {
              type: "pie",
              data: {
                labels: shipTypeData.labels,
                datasets: [
                  {
                    label: "Labels",
                    data: shipTypeData.datasets[0].data,
                    backgroundColor: shipTypeData.datasets[0].backgroundColor,
                    borderColor: [
                      "rgba(75, 192, 192, 1)",
                      "rgba(255, 99, 132, 1)",
                    ],
                    borderWidth: 1,
                  },
                ],
              },
              options: {
                responsive: true,
                title: {
                  display: true,
                  text: "Real-Time Data",
                },
                legend: {
                  position: "right",
                  labels: {
                    generateLabels: function (chart) {
                      var data = chart.data;
                      if (data.labels.length && data.datasets.length) {
                        return data.labels.map(function (label, i) {
                          var total = data.datasets[0].data.reduce(
                            (a, b) => a + b,
                            0
                          );
                          var value = data.datasets[0].data[i];
                          var percentage = ((value / total) * 100).toFixed(2);
                          return {
                            // And finally :
                            text: label + ": " + percentage + "%",
                            fillStyle: data.datasets[0].backgroundColor[i],
                            hidden: isNaN(value),

                            // Extra data used for toggling the correct item
                            index: i,
                          };
                        });
                      } else {
                        return [];
                      }
                    },
                  },
                },
                animation: {
                  animateScale: true,
                  animateRotate: true,
                },
              },
            });
          }
        </script>
        <!------------------------------------------------------------------------------------------------------------------------->
        <!------------------------------------------------------------------------------------------------------------------------->
        <!----------------------------------차트-------------------------------------------------------------------------->
        <!------------------------------------------------------------------------------------------------------------------------->
        <!------------------------------------------------------------------------------------------------------------------------->
        <script>
          function createLine1Chart(weeklyStatsData) {
            // Convert your labels to readable format
            const labels = weeklyStatsData.labels.map((label) =>
              convertTimestamp(label)
            );

            const ctx = document.getElementById("weeklyChart").getContext("2d");
            new Chart(ctx, {
              type: "line",
              data: {
                labels: labels, // your converted labels
                datasets: [
                  {
                    label: "Count",
                    data: weeklyStatsData.count, // your count values
                    borderColor: "rgba(75, 192, 192, 1)",
                    backgroundColor: "rgba(75, 192, 192, 0.2)",
                    fill: false,
                  },
                  {
                    label: "Distinct",
                    data: weeklyStatsData.distinct, // your distinct values
                    borderColor: "rgba(255, 99, 132, 1)",
                    backgroundColor: "rgba(255, 99, 132, 0.2)",
                    fill: false,
                  },
                ],
              },
              options: {
                scales: {
                  x: {
                    beginAtZero: true,
                    ticks: {
                      callback: function (value, index, values) {
                        // Show only every 5th label
                        return index % 5 === 0 ? value : null;
                      },
                    },
                  },
                  y: {
                    beginAtZero: true,
                  },
                },
              },
            });
          }

          function convertTimestamp(timestamp) {
            const date = new Date(timestamp * 1000);
            const day = ("0" + date.getDate()).slice(-2); // Get day and format it to 'dd'
            const month = ("0" + (date.getMonth() + 1)).slice(-2); // Get month and format it to 'mm'
            return `${day}/${month}`; // Return in 'dd/mm' format
          }
        </script>
      </div>
    </div>
    <%- include('../partials/footer') %>

    <!-- Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="/js/bundlebase.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
      integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
